String compareFrac(String str) {
        String s1="", s2="", s3="", s4="";
        int a=0, b=0, c=0, d=0;
        int i=0;
    
    // Extract a
        while(str.charAt(i) != '/') s1 += str.charAt(i++);
        a = Integer.parseInt(s1);
        i++;        // ignore '/' symbol
    
    // Extract b  
        while(str.charAt(i) != ',') s2 += str.charAt(i++);
        b = Integer.parseInt(s2);
        
        i += 2;     // ignore ',' and ' ' symbol
       
    // Extract c 
        while(str.charAt(i) != '/') s3 += str.charAt(i++);
        i++;        // ignore '/' symbol
        c = Integer.parseInt(s3);

    // Extract d
        while(i < str.length()) s4 += str.charAt(i++);
        d= Integer.parseInt(s4);
        
    // Comparing two fractions
        float f1 = (float)a/(float)b;
        float f2 = (float)c/(float)d;
        
        if(f1 == f2) return "equal";        
    
        return f1 > f2 ? s1+"/"+s2 : s3+"/"+s4;
    }

...........

You are given a string str containing two fractions a/b and c/d, compare them and return the greater. If they are equal, then return "equal".

Note: The string str contains "a/b, c/d"(fractions are separated by comma(,) & space( )). 

Examples

Input: str = "5/6, 11/45"
Output: 5/6
Explanation: 5/6=0.8333 and 11/45=0.2444, So 5/6 is greater fraction.
Input: str = "8/1, 8/1"
Output: equal
Explanation: We can see that both the fractions are same, so we'll return a string "equal".
Input: str = "10/17, 9/10"
Output: 9/10
Explanation: 10/17 = 0.588 & 9/10 = 0.9, so the greater fraction is "9/10".
Expected Time Complexity: O(len|str|)
Expected Auxiliary Space: O(1)

Constraints:
0<=a,c<=103
1<=b,d<=103

..........

