static Node addTwoLists(Node num1, Node num2){
        
        num1 = reverse(trimZero(num1));
        num2 = reverse(trimZero(num2));
        
        if(num1 == null && num2 == null)return new Node(0);
        
        Node head = new Node(-1);
        Node tail = head;
        int carry = 0;
        
        while(num1 != null || num2 != null || carry != 0){
            int x = num1 == null ? 0 : num1.data;
            int y = num2 == null ? 0 : num2.data;
            
            int d = x+y+carry;
            carry = d/10;
            tail.next = new Node(d%10);
            tail = tail.next;
            
            if(num1 != null)num1 = num1.next;
            if(num2 != null)num2 = num2.next;
        }
        
        return reverse(head.next);
    }
    
    static Node trimZero(Node head){
        Node cur = head;
        while(cur != null && cur.data == 0){
            cur = cur.next;
        }
        return cur;
    }
    
    static Node reverse(Node head){
        Node cur = head;
        Node prev = null;
        
        while(cur != null){
            Node next = cur.next;
            cur.next = prev;
            prev = cur;
            cur = next;
        }
        return prev;
    }

............

Given two numbers, num1 and num2, represented by linked lists of size n and m respectively. The task is to return a linked list that represents the sum of these two numbers.

For example, the number 190 will be represented by the linked list, 1->9->0->null, similarly 25 by 2->5->null. Sum of these two numbers is 190 + 25 = 215, which will be represented by 2->1->5->null. You are required to return the head of the linked list 2->1->5->null.

Note: There can be leading zeros in the input lists, but there should not be any leading zeros in the output list.

Example 1:

Input:
n = 2
num1 = 45 (4->5->null)
m = 3
num2 = 345 (3->4->5->null)
Output: 
3->9->0->null  
Explanation: 
For the given two linked list (4 5) and (3 4 5), after adding the two linked list resultant linked list will be (3 9 0).
Example 2:

Input:
n = 4
num1 = 0063 (0->0->6->3->null)
m = 2
num2 = 07 (0->7->null)
Output: 
7->0->null
Explanation: 
For the given two linked list (0 0 6 3) and (0 7), after adding the two linked list resultant linked list will be (7 0).
Your Task:
The task is to complete the function addTwoLists() which has node reference of both the linked lists and returns the head of the sum list.   

Expected Time Complexity: O(n+m)
Expected Auxiliary Space: O(max(n,m)) for the resultant list.

Constraints:
1 <= n, m <= 104

.........

