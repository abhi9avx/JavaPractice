String removeDups(String str) {

        // code here

        HashSet<Character> sri=new HashSet<>();

        String s="";

        for(int i=0;i<str.length();i++)

        {

            if(!sri.contains(str.charAt(i)))

            sri.add(str.charAt(i));

        }

        for(int j=0;j<str.length();j++)

        {

            if(sri.contains(str.charAt(j)))

            {

                s+=str.charAt(j);

                sri.remove(str.charAt(j));

            }

        }

        return s;

    }

............

Given a string str without spaces, the task is to remove all duplicate characters from it, keeping only the first occurrence.

Note: The original order of characters must be kept the same. 

Examples :

Input: str = "zvvo"
Output: "zvo"
Explanation: Only keep the first occurrence
Input: str = "gfg"
Output: "gf"
Explanation: Only keep the first occurrence
Expected Time Complexity: O(n)
Expected Auxiliary Space: O(1)

Constraints:
1 <= |str| <= 105
str contains lowercase English alphabets
